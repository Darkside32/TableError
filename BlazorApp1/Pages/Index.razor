@page "/"
@using BlazorApp1.Services
@using BlazorApp1.Data;
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
<div class="table-responsive">
    @if (orders == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table id="example" class="table" >
            <thead>
                <tr>
                    <th scope="col">Order Number</th>
                    <th scope="col">Customer</th>
                    <th scope="col">Hauiler</th>
                    <th scope="col">Driver</th>
                    <th scope="col">Collection<br /> Date</th>
                    <th scope="col">Collection Town</th>
                    <th scope="col">Delivery Date</th>
                    <th scope="col">Delivery Town</th>
                 
                </tr>
            </thead>
            <tbody>
                @foreach (var order in orders)
                {
                        <tr class="">
                            <th scope="row">1</th>
                            <td>@order.Cust_Name</td>
                            <td>@order.Haulier_Name</td>
                            <td>@order.Driver_Name </td>
                            <td>@order.CollectionDate.Value.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@order.CollectionTown</td>
                            <td>@order.DeliveryDate.Value.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@order.DeliveryTown</td>
                          
                        </tr>
                }


            </tbody>
        </table>
    }
</div>

@code
{

    private List<OrderDetails> orders { get; set; }
    public int Selected { get; set; }
    public OrderDetails selectedOrder { get; set; }
    public bool SelectedBool { get; set; } = false;

    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender == false)
        {

            await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");

        }
        if (firstRender)
        {
            await JSRuntime.InvokeAsync<object>("TestDataTablesAdd", "#example");
        }
        base.OnAfterRender(firstRender);
    }

    protected async override Task OnInitializedAsync()
    {
        orders = new List<OrderDetails>{
            new OrderDetails{Key = 1 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 2 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 3 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 4 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 5 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 6 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 7 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 8 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 9 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 10 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 11 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 12 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
            new OrderDetails{Key = 13 ,Cust_Name = "Test", Haulier_Name = "Test", Driver_Name = "Test", CollectionDate = DateTime.Now, CollectionTown = "Test", DeliveryDate = DateTime.Now, DeliveryTown = "Test"},
        };
    }

    private void SelectedFunction(int key)
    {
        Selected = key;
        SelectedBool = true;
        foreach (var order in orders)
        {

            if (order.Key == key)
            {
                selectedOrder = order;

              

                NavigationManager.NavigateTo("/Selected/" + key);
            }
        }
    }

}